{
  "info": {
    "_postman_id": "17576152-9c12-42ac-be34-6b77fd057b0d",
    "name": "Nodejs-Todo-express",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "15094201"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Create User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\",\n    \"passwordConfirmation\": \"{{password}}\",\n    \"name\": \"{{name}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseRequestUrl}}/api/users",
              "host": ["{{baseRequestUrl}}"],
              "path": ["api", "users"]
            }
          },
          "response": []
        },
        {
          "name": "Create Session",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "console.log(responseBody)",
                  "postman.setEnvironmentVariable(\"accessToken\", jsonData.accessToken);",
                  "postman.setEnvironmentVariable(\"refreshToken\", jsonData.refreshToken);",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseRequestUrl}}/api/sessions",
              "host": ["{{baseRequestUrl}}"],
              "path": ["api", "sessions"]
            }
          },
          "response": []
        },
        {
          "name": "Get Sessions",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "",
                  "const newAccessToken = responseHeaders['x-access-token']",
                  "",
                  "if(newAccessToken){",
                  "    console.log('Set new access token')",
                  "postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
                  "}",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "x-refresh",
                "value": "{{refreshToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseRequestUrl}}/api/sessions",
              "host": ["{{baseRequestUrl}}"],
              "path": ["api", "sessions"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Session",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const newAccessToken = responseHeaders['x-access-token']",
                  "",
                  "if(newAccessToken){",
                  "    console.log('Set new access token')",
                  "postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
                  "}",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "x-refresh",
                "value": "{{refreshToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseRequestUrl}}/api/sessions",
              "host": ["{{baseRequestUrl}}"],
              "path": ["api", "sessions"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "email",
      "value": "test@example.com",
      "type": "string"
    },
    {
      "key": "password",
      "value": "password",
      "type": "string"
    },
    {
      "key": "name",
      "value": "testName",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "<accessToken will be set when you create a session>",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "<refreshToken will be set when you create a session>",
      "type": "string"
    },
    {
      "key": "baseRequestUrl",
      "value": "http://localhost:8000",
      "type": "string"
    }
  ]
}
